**** INPUT SAMPLE TREATMENT DATA.;
data treat;
label subjid = "Subject Number"
trtcd = "Treatment";
input subjid trtcd @@;
datalines;
101 1 102 0 103 0 104 1 105 0 106 0 107 1 108 1 109 0 110 1
111 0 112 0 113 0 114 1 115 0 116 1 117 0 118 1 119 1 120 1
121 1 122 0 123 1 124 0 125 1 126 1 127 0 128 1 129 1 130 1
131 1 132 0 133 1 134 0 135 1 136 1 137 0 138 1 139 1 140 1
141 1 142 0 143 1 144 0 145 1 146 1 147 0 148 1 149 1 150 1
151 1 152 0 153 1 154 0 155 1 156 1 157 0 158 1 159 1 160 1
161 1 162 0 163 1 164 0 165 1 166 1 167 0 168 1 169 1 170 1
;
run;
**** INPUT SAMPLE ADVERSE EVENT DATA.;
data ae;
label subjid = "Subject Number"
aebodsys = "Body System of Event"
aedecod = "Preferred Term for Event"
aerel = "Relatedness: 1=not,2=possibly,3=probably"
aesev = "Severity/Intensity:1=mild,2=moderate,3=severe";
input subjid 1-3 aerel 5 aesev 7
aebodsys $ 9-34 aedecod $ 38-62;
datalines;
101 1 1 Cardiac disorders Atrial flutter
101 2 1 Gastrointestinal disorders Constipation
102 2 2 Cardiac disorders Cardiac failure
102 1 1 Psychiatric disorders Delirium
103 1 1 Cardiac disorders Palpitations
103 1 2 Cardiac disorders Palpitations
103 2 2 Cardiac disorders Tachycardia
115 3 2 Gastrointestinal disorders Abdominal pain
115 3 1 Gastrointestinal disorders Anal ulcer
116 2 1 Gastrointestinal disorders Constipation
117 2 2 Gastrointestinal disorders Dyspepsia
118 3 3 Gastrointestinal disorders Flatulence
119 1 3 Gastrointestinal disorders Hiatus hernia
130 1 1 Nervous system disorders Convulsion
131 2 2 Nervous system disorders Dizziness
132 1 1 Nervous system disorders Essential tremor
135 1 3 Psychiatric disorders Confusional state
140 1 1 Psychiatric disorders Delirium
140 2 1 Psychiatric disorders Sleep disorder
141 1 3 Cardiac disorders Palpitations
;
run;
**** CREATE FORMAT FOR AE SEVERITY.;
proc format;
value aesev
1 = "Mild"
2 = "Moderate"
3 = "Severe";
run;
**** PERFORM A SIMPLE COUNT OF EACH TREATMENT ARM AND OUTPUT.
**** RESULT AS MACRO VARIABLES. N1 = 1ST COLUMN N FOR ACTIVE
**** THERAPY, N2 = 2ND COLUMN N FOR PLACEBO, N3 REPRESENTS THE
**** 3RD COLUMN TOTAL N.;
data _null_;
set treat end = eof;
**** INCREMENT (AND RETAIN) EACH TREATMENT COUNTER.;
if trtcd = 1 then
n1 + 1;
else if trtcd = 0 then
n2 + 1;
**** INCREMENT (AND RETAIN) TOTAL COUNTER.;
n3 + 1;
**** AT THE END OF THE FILE, CREATE &N1, &N2, AND &N3.;
if eof then
do;
call symput("n1", put(n1,4.));
call symput("n2", put(n2,4.));
call symput("n3", put(n3,4.));
end;
run;
proc sort
data = ae;
by subjid;
run;
proc sort
data = treat;
by subjid;
run;
***** MERGE ADVERSE EVENT AND DEMOGRAPHICS DATA;
data ae;
merge treat(in = intreat) ae(in = inae);
by subjid;
if intreat and inae;
run;
**** CALCULATE ANY EVENT LEVEL COUNTS. THIS IS THE FIRST ROW IN
**** THE SUMMARY.;
data anyevent;
set ae end = eof;
by subjid;
keep rowlabel count1 count2 count3;
**** KEEP ONLY LAST RECORD PER SUBJECT AS WE ONLY WANT TO
**** COUNT A PATIENT ONCE IF THEY HAD ANY ADVERSE EVENTS.;
if last.subjid;
**** INCREMENT (AND RETAIN) EACH AE COUNT.;
if trtcd = 1 then
count1 + 1;
else if trtcd = 0 then
count2 + 1;
**** INCREMENT (AND RETAIN) TOTAL AE COUNT.;
count3 + 1;
**** KEEP LAST RECORD OF THE FILE WITH TOTALS.;
if eof;
**** CREATE ROW LABEL FOR REPORT.;
length rowlabel $ 30;
rowlabel = "Any Event";
run;
**** CALCULATE ANY EVENT BY MAXIMUM SEVERITY LEVEL COUNTS. THIS
**** IS THE BY SEVERITY BREAKDOWN UNDER THE FIRST ROW OF THE
**** SUMMARY.;
proc sort data = ae out = bysev; by subjid aesev;
**** KEEP ONLY LAST RECORD PER SUBJECT AT HIGHEST SEVERITY AS WE
**** ONLY WANT TO COUNT A PATIENT ONCE AT MAX SEVERITY IF THEY
**** HAD ANY ADVERSE EVENTS.;
data bysev;
set bysev;
by subjid aesev;
if last.subjid;
run;
proc sort
data = bysev;
by aesev;
run;
data bysev;
set bysev end = eof;
by aesev;
keep rowlabel count1 count2 count3;
**** INITIALIZE AE COUNTERS TO ZERO AT EACH SEVERITY LEVEL.;
if first.aesev then
do;
count1 = 0;
count2 = 0;
count3 = 0;
end;
**** INCREMENT (AND RETAIN) EACH AE COUNT.;
if trtcd = 1 then
count1 + 1;
else if trtcd = 0 then
count2 + 1;
**** INCREMENT (AND RETAIN) TOTAL COUNT.;
count3 + 1;
**** KEEP LAST RECORD WITHIN EACH SEVERITY LEVEL.;
if last.aesev;
**** CREATE ROW LABEL FOR REPORT.;
length rowlabel $ 30;
rowlabel = " " || put(aesev, aesev.);
run;
**** CALCULATE BODY SYSTEM BY MAXIMUM SEVERITY LEVEL COUNTS.
**** THIS IS THE BY SEVERITY BREAKDOWN UNDER THE BODY SYSTEMS OF
**** THE SUMMARY.;
proc sort
data = ae
out = bysys_sev;
by subjid aebodsys aesev;
run;
**** KEEP ONLY LAST RECORD PER SUBJECT PER BODY SYSTEM AT HIGHEST
**** SEVERITY AS WE ONLY WANT TO COUNT A PATIENT ONCE AT MAX
**** SEVERITY WITHIN A BODY SYSTEM.;
data bysys_sev;
set bysys_sev;
by subjid aebodsys aesev;
if last.aebodsys;
run;
proc sort
data = bysys_sev;
by aebodsys aesev;
run;
data bysys_sev;
set bysys_sev;
by aebodsys aesev;
keep aebodsys rowlabel count1 count2 count3;
**** INITIALIZE COUNTERS TO ZERO AT EACH SEVERITY LEVEL.;
if first.aesev then
do;
count1 = 0;
count2 = 0;
count3 = 0;
end;
**** INCREMENT (AND RETAIN) EACH AE COUNT.;
if trtcd = 1 then
count1 + 1;
else if trtcd = 0 then
count2 + 1;
**** INCREMENT (AND RETAIN) TOTAL COUNT.;
count3 + 1;
**** KEEP LAST RECORD FOR EACH BODY SYSTEM SEVERITY LEVEL.;
if last.aesev;
**** CREATE ROW LABEL FOR REPORT.;
length rowlabel $ 30;
rowlabel = " " || put(aesev, aesev.);
run;
**** CALCULATE BODY SYSTEM LEVEL AE COUNTS. THIS IS DONE BY
**** ADDING UP THE BODY SYSTEM BY SEVERITY COUNTS.;
data bysys;
set bysys_sev(rename = (count1 = _count1
count2 = _count2
count3 = _count3));
by aebodsys;
keep aebodsys rowlabel count1 count2 count3;
**** INITIALIZE COUNTERS TO ZERO AT EACH NEW BODY SYSTEM.;
if first.aebodsys then
do;
count1 = 0;
count2 = 0;
count3 = 0;
end;
**** INCREMENT (AND RETAIN) EACH AE COUNT.;
count1 + _count1;
count2 + _count2;
count3 + _count3;
**** KEEP LAST RECORD WITHIN EACH BODY SYSTEM.;
if last.aebodsys;
**** CREATE ROW LABEL FOR REPORT.;
length rowlabel $ 30;
rowlabel = aebodsys;
run;
**** INTERLEAVE OVERALL BODY SYSTEM COUNTS WITH BY SEVERITY
**** COUNTS.;
data bysys;
set bysys bysys_sev;
by aebodsys;
run;
**** CALCULATE PREFERRED TERM BY MAXIMUM SEVERITY LEVEL COUNTS.
**** THIS IS THE BY SEVERITY BREAKDOWN UNDER THE PREFERRED TERMS
**** IN THE SUMMARY.;
proc sort
data = ae
out = byterm_sev;
by subjid aebodsys aedecod aesev;
run;
**** KEEP ONLY LAST RECORD PER SUBJECT PER BODY SYSTEM PER
**** ADVERSE EVENT AT HIGHEST SEVERITY AS WE ONLY WANT TO COUNT A
**** PATIENT ONCE AT MAX SEVERITY WITHIN A PREFERRED TERM.;
data byterm_sev;
set byterm_sev;
by subjid aebodsys aedecod aesev;
if last.aedecod;
run;
proc sort
data = byterm_sev;
by aebodsys aedecod aesev;
run;
data byterm_sev;
set byterm_sev;
by aebodsys aedecod aesev;
keep aebodsys aedecod rowlabel count1 count2 count3;
**** INITIALIZE COUNTERS TO ZERO AT EACH SEVERITY LEVEL.;
if first.aesev then
do;
count1 = 0;
count2 = 0;
count3 = 0;
end;
**** INCREMENT (AND RETAIN) EACH AE COUNT.;
if trtcd = 1 then
count1 + 1;
else if trtcd = 0 then
count2 + 1;
**** INCREMENT (AND RETAIN) TOTAL COUNT.;
count3 + 1;
**** KEEP LAST RECORD FOR EACH PREF. TERM SEVERITY LEVEL.;
if last.aesev;
**** CREATE ROW LABEL FOR REPORT.;
length rowlabel $ 30;
rowlabel = " " || put(aesev, aesev.) ;
run;
**** CALCULATE PREFERRED TERM LEVEL AE COUNTS. THIS IS DONE BY
**** ADDING UP THE PREFERRED TERM BY SEVERITY COUNTS.;
data byterm;
set byterm_sev(rename = (count1 = _count1
count2 = _count2
count3 = _count3));
by aebodsys aedecod;
keep aebodsys aedecod rowlabel count1 count2 count3;
**** INITIALIZE COUNTERS TO ZERO AT EACH NEW PREF. TERM.;
if first.aedecod then
do;
count1 = 0;
count2 = 0;
count3 = 0;
end;
**** INCREMENT (AND RETAIN) EACH AE COUNT.;
count1 + _count1;
count2 + _count2;
count3 + _count3;
**** KEEP LAST RECORD WITHIN EACH PREFERRED TERM.;
if last.aedecod;
**** CREATE ROW LABEL FOR REPORT.;
length rowlabel $ 30;
rowlabel = " " || aedecod ;
run;
**** INTERLEAVE PREFERRED TERM COUNTS WITH BY SEVERITY COUNTS.;
data byterm;
set byterm byterm_sev;
by aebodsys aedecod;
run;
**** INTERLEAVE BODY SYSTEM COUNTS WITH PREFERRED TERM COUNTS.;
data bysys_byterm;
set bysys byterm;
by aebodsys;
run;
**** SET ALL INTERMEDIATE DATA SETS TOGETHER AND CALCULATE
**** PERCENTAGES.;
data all;
set anyevent
bysev
bysys_byterm;
length col1 col2 col3 $ 10;
**** CALCULATE %S AND CREATE N/% TEXT IN COL1-COL3.;
if rowlabel ne '' then
do;
pct1 = (count1 / &n1) * 100;
pct2 = (count2 / &n2) * 100;
pct3 = (count3 / &n3) * 100;
col1 = put(count1,3.) || " (" || put(pct1,3.) || "%)";
col2 = put(count2,3.) || " (" || put(pct2,3.) || "%)";
col3 = put(count3,3.) || " (" || put(pct3,3.) || "%)";
end;
**** CREATE SYSTEM_AND_TERM USED AS AN INDEX FOR INSERTING
**** BLANK LINES AND PAGE BREAKS IN THE DATA _NULL_ BELOW.;
length system_and_term $ 200;
system_and_term = aebodsys || aedecod;
run;
**** WRITE AE SUMMARY TO FILE USING DATA _NULL_.;
options nodate nonumber;
title1 "Table 5.4";
title2 "Summary of Adverse Events";
title3 "By Body System, Preferred Term, and Greatest Severity";
data _null_;
set all(sortedby = aebodsys system_and_term) end = eof;
by aebodsys system_and_term;
**** SET UP OUTPUT FILE OPTIONS.;
file print titles linesleft = ll pagesize = 40 linesize = 70;
**** DEFINE A NEW PAGE FLAG. IF 1, THEN INSERT PAGE BREAK.;
retain newpage 0;
**** PRINT OUTPUT PAGE HEADER.;
if _n_ = 1 or newpage = 1 then
do;
put @1 "--------------------------------"
"--------------------------------------" /
@1 "Body System" /
@4 "Preferred Term" @33 "Active" @47 "Placebo"
@62 "Overall" /
@7 "Severity" @33 "N=&n1" @48 "N=&n2" @63 "N=&n3" /
@1 "--------------------------------"
"--------------------------------------" ;
**** IF A BODY SYSTEM SPANS PAGES, REPEAT THE
**** BODY SYSTEM WITH A CONTINUED INDICATOR.;
if not first.aebodsys then
put @1 aebodsys " (Continued)";
end;
**** PUT AE COUNTS AND PERCENTAGES ON THE PAGE.;
put @1 rowlabel $40. @30 col1 $10. @45 col2 $10.
@60 col3 $10.;
**** RESET NEW PAGE FLAG.;
newpage = 0;
**** IF AT THE END OF THE PAGE, PUT A DOUBLE UNDERLINE.
**** OTHERWISE IF AT THE END OF A PREFERRED TERM AND NEAR THE
**** BOTTOM OF THE PAGE (LL <= 6) THEN PUT A PAGE BREAK.
**** OTHERWISE IF AT THE END OF A PREFERRED TERM PUT A BLANK
**** LINE.;
if eof then
put @1 "--------------------------------"
"--------------------------------------" /
@1 "--------------------------------"
"--------------------------------------";
else if last.system_and_term and ll <= 6 then
do;
put @1 "--------------------------------"
"--------------------------------------" /
@60 "(CONTINUED)";
put _page_;
newpage = 1;
end;
else if last.system_and_term then
put;
run;
