libname demo '/folders/myfolders/eee';

data demo_trt;
merge demo.admin_(in=a) demo.vsigns_(in=b);
by PATIENT;
if a and b;
run;

proc export data=demo_trt 
   outfile='/folders/myfolders/eee/trt.csv'
   dbms=csv
   replace;
run; 

proc import datafile='/folders/myfolders/eee/trt.csv' 
 out=demo_trt_fixtime  
 dbms=csv    
 replace;
run;


data demo_trt_datetime;
set demo_trt_fixtime;
vdateyear = Substr(Strip(put(vdate,MMDDYY10.)),7,4);
vdatemonth = Substr(Strip(put(vdate,MMDDYY10.)),1,2);
vdateday = Substr(Strip(put(vdate,MMDDYY10.)),4,2);
vtimehh=scan(Strip(put(vtime,TIME20.)),1,':');
vtimemm=scan(Strip(put(vtime,TIME20.)),2,':');
vdate_num=input(CAT(strip(vdateyear),strip(vdatemonth),strip(vdateday)),YYMMDD10.);
datetime_num=dhms(vdate_num,strip(put(vtimehh,bset.)),strip(put(vtimemm,best.)),0);
datetime15=put(datetime_num,datetime.);

adateyear = Substr(Strip(put(dateadmn,MMDDYY10.)),7,4);
adatemonth = Substr(Strip(put(dateadmn,MMDDYY10.)),1,2);
adateday = Substr(Strip(put(dateadmn,MMDDYY10.)),4,2);
atimehh=scan(Strip(put(timeadmn,TIME20.)),1,':');
atimemm=scan(Strip(put(timeadmn,TIME20.)),2,':');
adate_num=input(CAT(strip(adateyear),strip(adatemonth),strip(adateday)),YYMMDD10.);
adatetime_num=dhms(adate_num,strip(put(atimehh,bset.)),strip(put(atimemm,best.)),0);
adatetime15=put(adatetime_num,datetime.);
run;


proc sql;
create table  trt_baseline as
   select patient, systol as systol0, diastol as diastol0, hrtrate as hrtrate0, 
 ctemp as ctemp0,resprate as resprate0 
          
      from demo_trt_datetime
      having datetime_num<adatetime_num and datetime_num ne .;
      quit;
      
data baseline_merge;
merge trt_baseline(in=a) demo_trt_datetime(in=b);
by PATIENT;
if a and b;
run; 
  
data baseline_merge;
set baseline_merge(drop=vdateyear vdatemonth vdateday vtimehh vtimemm vdate_num
adateyear adatemonth adateday atimehh atimemm adate_num);
resprate_=input(resprate, best.);
resprate0_=input(resprate0, best.);
run; 

Proc sql;
create table diff as
select *,
case when (systol-systol0)/systol0>=0.2 and systol ne . and systol0 ne . then 1
     when systol0= . or systol = . then .
    else 0
    end as sys,
case when (systol-systol0)/systol0<=-0.2 and systol ne . and systol0 ne . then 1
     when systol0= . or systol = . then .
    else 0
    end as nsys, 
case when (diastol-diastol0)/diastol>=0.2 and diastol ne . and diastol0 ne . then 1
       when diastol0= . or diastol = . then .
   else 0
    end as dis,
case when (diastol-diastol0)/diastol0<=-0.2 and diastol ne . and diastol0 ne . then 1
    when diastol0= . or diastol = . then .
    else 0
    end as ndis,
case when (hrtrate-hrtrate0)/hrtrate0>=0.2 and hrtrate ne . and hrtrate0 ne . then 1
    when hrtrate0= . or hrtrate = . then .
    else 0
    end as hrt, 
case when (hrtrate-hrtrate0)/hrtrate0<=-0.2 and hrtrate ne . and hrtrate0 ne . then 1
    when hrtrate0= . or hrtrate = . then .
    else 0
    end as nhrt,
case when ctemp-ctemp0>=1 and ctemp ne . and ctemp0 ne . then 1
    when ctemp= . or ctemp0 = . then .
    else 0
    end as ct,
case when ctemp-ctemp0<=-1 and ctemp ne . and ctemp0 ne . then 1
    when ctemp= . or ctemp0 = . then .
    else 0
    end as nct,
case when (resprate_-resprate0_)/resprate0_>=0.2 and resprate_ ne . and resprate0_ ne . then 1
   when resprate_= . or resprate0_ = . then .
   else 0
    end as res, 
case  when (resprate_-resprate0_)/resprate0_<=-0.2 and resprate_ ne . and resprate0_ ne . then 1
    when resprate_= . or resprate0_ = . then .
    else 0
    end as nres
from baseline_merge;
quit;

proc sql;
create table diff_sum as
select *, 
sum(sys) as syssum,sum(nsys) as nsyssum,sum(dis) as dissum,sum(ndis) as ndissum,
sum(hrt) as hrtsum,sum(nhrt) as nhrtsum,sum(res) as ressum,sum(nres) as nressum,
sum(ct) as ctsum, sum(nct) as nctsum
from diff
group by patient;
quit; 

proc sort data=diff_sum nodupkey out=diff_nodup;
by patient syssum ;
run;


data diff_count;
set diff_nodup;
if syssum>0 then syssum=1;
if nsyssum>0 then nsyssum=1;
if dissum>0 then dissum=1;
if ndissum>0 then ndissum=1;
if hrtsum>0 then hrtsum=1;
if nhrtsum>0 then nhrtsum=1;
if ressum>0 then ressum=1;
if nressum>0 then nressum=1;
if ctsum>0 then ctsum=1;
if nctsum>0 then nctsum=1;
run;

data mergedrugsort;
merge diff_count(in=a) demo.dose_(in=b keep=drugsort patient);
by PATIENT;
if a and b;
run;

data mergedrugsort;
set mergedrugsort;
output;
drugsort=3; output;
run;

proc sql;
create table countmissing as
   select count(syssum) as num_sys,count(dissum)as num_dia,count(hrtsum)as num_hrt,
   count(ressum)as num_res, count(ct)as num_ct
   from mergedrugsort
   group by drugsort;
   quit;
   
proc transpose data=countmissing out=count_t prefix=trt;
var num_sys num_dia num_hrt num_res num_ct;
run; 

data countN;
set count_t;
t1=cat('N=',strip(trt1));
t2=cat('N=',strip(trt2));
t3=cat('N=',strip(trt3));
run;
   
proc sql;
create table diff_sumcount as
select *,
sum(syssum) as insys, sum(nsyssum) as desys,
sum(dissum) as indis, sum(ndissum) as dedis,
sum(hrtsum) as inhrt, sum(nhrtsum) as dehrt,
sum(ressum) as inres, sum(nressum) as deres,
sum(ctsum) as inct, sum(nctsum) as dect
from mergedrugsort
group by drugsort;
quit;


proc sort data=diff_sumcount(keep=drugsort insys desys indis dedis 
inhrt dehrt inres deres inct dect) nodupkey out=diff_singlecount;
by drugsort insys;
run;

proc transpose data=diff_singlecount out=diff_t prefix=trt;
var insys desys indis dedis inhrt dehrt inres deres inct dect ;
run;

data diff_t1;
set diff_t;
if _name_='insys'or _name_= 'desys' then name='num_sys';
if _name_='indis'or  _name_='dedis' then name='num_dia';
if _name_='inhrt'or  _name_='dehrt' then name='num_hrt';
if _name_='inct' or  _name_='dect' then name='num_ct';
if _name_='inres'or _name_='deres' then name='num_res';
run;

proc sql;
create table pct as 
select *,
cat(a.trt1,'(',round(a.trt1/b.trt1,.001)*100,'%',')') as tr1,
cat(a.trt2,'(',round(a.trt2/b.trt2,.001)*100,'%',')') as tr2,
cat(a.trt3,'(',round(a.trt3/b.trt3,.001)*100,'%',')') as tr3
from diff_t1 as a full join 
     count_t as b
     on a.name=b._name_;
     quit;


proc sql;
create table final as
select _name_, tr1,tr2,tr3,
case when _NAME_='insys' then 'Increase>=20% from Baseline'
     when _name_='desys' then 'Increase<=20% from Baseline'
     when _name_='indis' then 'Increase>=20% from Baseline'
     when _name_='dedis' then 'Increase<=20% from Baseline'
     when _name_='inhrt' then 'Increase>=20% from Baseline'
     when _name_='dehrt' then 'Increase<=20% from Baseline'
     when _name_='inct' then 'Increase>=1℃ from Baseline'
     when _name_='dect' then 'Increase<=1℃ from Baseline'
     when _name_='inres' then 'Increase>=20% from Baseline'
     when _name_='deres' then 'Increase<=20% from Baseline'
      when _name_='num_sys'   then 'Systolic Blood Pressure:'
      when _name_='num_dia'   then 'Diastolic Blood Pressure:'
      when _name_='num_hrt'   then 'Heart Rate:'
      when _name_='num_ct'    then 'Temperature:'
      when _name_='num_res'   then 'Respiration Rate:'
      else '' 
     end as cat, 
case when _name_='num_sys'  then 1
     when _name_='insys' then 2
     when _name_='desys' then 3
     when _name_='num_dia' then 4
     when _name_='indis' then 5
     when _name_='dedis' then 6
     when _name_='num_hrt' then 7
     when _name_='inhrt' then 8
     when _name_='dehrt' then 9
     when _name_='num_ct' then 10
     when _name_='inct' then 11
     when _name_='dect' then 12
     when _name_='num_res' then 13
     when _name_='inres' then 14
     when _name_='deres' then 15
     else .
     end as catn
 from 
		( select * from work.pct outer union corr
		  select * from work.countn(rename=t1=tr1 rename=t2=tr2 rename=t3=tr3))
		  order calculated catn
		;
quit;

ods pdf file="/folders/myfolders/eee/3vsign.pdf";
proc report data=final(drop=_name_ catn);
title1 "Changes from Baseline in Vital Signs of Potential Clinical Importance ";
title2 "All Patients Dosed";
column cat tr1 tr2 tr3 ;
define cat/display "Protocal-Defined Criteria";
define tr1/display "Bogusene/n(%)"; 
define tr2/display "Placebo/n(%)";
define tr3/display "Total/n(%)";
run;
ods pdf close;

